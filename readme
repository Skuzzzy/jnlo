jnlo - Short for jn logic

Takes a string expression parses the string into tokens, then uses the shunting yard algorithm to convert the expression to postfix, this postfix expression can then be evaluated and the results printed in a truth table

Sample output

Expression: c*!(a+b)
Postfix Reprepsentation: c a b + ! * 
#	a	b	c	Result
0	false	false	false	false
1	false	false	true	true
2	false	true	false	false
3	false	true	true	false
4	true	false	false	false
5	true	false	true	false
6	true	true	false	false
7	true	true	true	false

Additionally a string expression can be converted into it's SoP and Pos forms, as well as their reduced form

Expression: (a)+(b*!c)+d
Sum of Products Form: (!a*!b*!c*d)+(!a*!b*c*d)+(!a*b*!c*!d)+(!a*b*!c*d)+(!a*b*c*d)+(a*!b*!c*!d)+(a*!b*!c*d)+(a*!b*c*!d)+(a*!b*c*d)+(a*b*!c*!d)+(a*b*!c*d)+(a*b*c*!d)+(a*b*c*d)
Product of Sums Form: (a+b+c+d)*(a+b+!c+d)*(a+!b+!c+d)
Minimized Sum of Products Form: (!a*!b*d)+(b*!c)+(b*c*d)+(a*!b)+(a*b*c*!d)
Minimized Product of Sums Form: (a+b+d)*(a+!b+!c+d)
